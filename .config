# This is the configuration file used by all the scripts
#
# Common information
# Where are the scripts located? Trying to make this a bit more genereric as we're 
# WSS now and could be Apollo 911 at some later date. Same with the location; moving 
# to a more neutral script directory eventually
SCRIPTS=/opt/scripts
# where standalone scripts reside
SCRIPTS_BINS=${SCRIPTS}/bin
# where run.d scripts reside
SCRIPTS_RUND=${SCRIPTS}/run.d
# where server.d scripts reside
SCRIPTS_SVRD=${SCRIPTS}/server.d
# where to read data from 
SCRIPTS_DATA=${SCRIPTS}/etc
# where to log output to
SCRIPTS_LOGS=${SCRIPTS}/var
###
### The old script locations
###
SCRIPTS=/opt/intrado
SCRIPTS_BINS=${SCRIPTS}/bin
SCRIPTS_RUND=${SCRIPTS}/run.d
SCRIPTS_SVRD=${SCRIPTS}/bin
SCRIPTS_DATA=${SCRIPTS}/etc
SCRIPTS_LOGS=${SCRIPTS}/etc

# update path info so utilities can be found without hunting
PATH=/bin:/usr/bin:/sbin:/usr/sbin:/usr/local/bin:/usr/local/sbin:/opt/csw/bin:/usr/contrib/bin; export PATH

# What is this system?
OS=`uname`
# need the IP Address for the Kubernetes servers; all are Red Hat so 
if [[ ${OS} = 'Linux' ]]
then
# get the server IP address
  INTERNAL_IP=$(ip a | grep global | awk '{print $2}' | cut -f1 -d/ | head -1)
fi

# get the distro
DISTRO=""
if [[ -f /etc/redhat-release ]]
then
  grep "Red Hat" /etc/redhat-release > /dev/null
  if [[ $? -eq 0 ]]
  then
    DISTRO="Red Hat"
  fi
  grep "CentOS" /etc/redhat-release > /dev/null
  if [[ $? -eq 0 ]]
  then
    DISTRO="CentOS"
  fi
fi
if [[ -f /etc/debian_version ]]
then
  DISTRO="Debian"
fi

# kernel version
KERNELVERS=`uname -r`
# And the hostname?
HOSTNAME=`hostname|cut -f1 -d.`
FQDN=`hostname`
# destination for any emails to the team
WHOCARES="unixadmins@intrado.com"
# well, I'm generally debugging so add me in.
CARLCARES="carl.schelin@intrado.com"
# changelog emails for scripts
CHANGELOG="changelog@incojs01.scc911.com"
# pull some info from the fingerprint file
if [[ -f ${SCRIPTS}/etc/fingerprint ]]
then
  SERVER_SITE=`grep "^Location:" ${SCRIPTS}/etc/fingerprint | awk '{print $NF}'`
  SERVER_ZONE=`grep "^Zone:" ${SCRIPTS}/etc/fingerprint | awk '{print $NF}'`
else
  SERVER_SITE="Unknown"
  SERVER_ZONE="Unknown"
fi

# where's crontab
CRONTAB='/'
if [[ -f /var/spool/cron/crontabs/root ]]
then
  CRONTAB=/var/spool/cron/crontabs
fi
if [[ -f /var/spool/cron/root ]]
then
  CRONTAB=/var/spool/cron
fi

# list of System Admins
SYSADMINS="cschelin kzupan jnoyes tcooper escott"
# list of former System Admins
SYSADMINS="${SYSADMINS} mchahud jschroet jmetz ppietras"
# list of service accounts
SYSADMINS="${SYSADMINS} unixsvc"

# chkserver information:
#
# For server checks, it's servername:IP:protocol:Port[,Port]
# Example: incojs01:10.100.78.143:TCP:80,443
#
#
# Comparison checks. These are temporarily disabled until someone has time to review them.
CHECK_SUID="No"
CHECK_GUID="No"
CHECK_PWCK="No"
CHECK_GRPCK="No"
CHECK_SERVICES="No"
CHECK_PACKAGES="No"

# Time Server check
CHECK_TIME="Yes"
TIME_SERVERS="gpsntp1.scc911.com:10.100.228.31:UDP:123"
TIME_SERVERS="${TIME_SERVERS} gpsntp2.scc911.com:192.168.200.20:UDP:123"

# Monitoring Server check
CHECK_MONITORING="Yes"
MONITORING_SERVERS="lnmtcodcom1vip.scc911.com:10.109.243.19:TCP:383"
MONITORING_SERVERS="${MONITORING_SERVERS} miamfldcom1vip.scc911.com:10.109.226.19:TCP:383"
MONITORING_SERVERS="${MONITORING_SERVERS} omiagenttraffic.gb3.intrado.com:10.32.134.9:TCP:383"
MONITORING_SERVERS="${MONITORING_SERVERS} omiagenttraffic.gb3.intrado.com:10.32.6.9:TCP:383"
MONITORING_SERVERS="${MONITORING_SERVERS} hpomimiamdatavip.e911zone.intrado.pri:10.32.134.9:TCP:383"
MONITORING_SERVERS="${MONITORING_SERVERS} hpomilnmtdatavip.e911zone.intrado.pri:10.32.6.9:TCP:383"
MONITORING_SERVERS="${MONITORING_SERVERS} lnmt1euomh8nm1.scc911.com:10.32.10.60:TCP:383"
MONITORING_SERVERS="${MONITORING_SERVERS} lnmt1euomh8nm2.scc911.com:10.32.10.61:TCP:383"
MONITORING_SERVERS="${MONITORING_SERVERS} miam1euomh8nm1.scc911.com:10.32.138.60:TCP:383"
MONITORING_SERVERS="${MONITORING_SERVERS} miam1euomh8nm2.scc911.com:10.32.138.61:TCP:383"
# nagios server
MONITORING_SERVERS="${MONITORING_SERVERS} status.intrado.com:10.100.128.4:TCP:443"

# general route check. making sure an IP is using the correct interface
CHECK_ROUTES="Yes"
ROUTE_SERVERS="lnmt1dwasobprb3.dmz.intrado.pri:10.33.12.3"

# Data Palette Server check
CHECK_DATA_PALATTE="Yes"
DATA_PALATTE_SERVERS="lnmtcodcdpa1.scc911.com:10.100.128.3:TCP:8080"

# Email Server check
CHECK_EMAIL="Yes"
EMAIL_SERVERS="mail.intrado.com:10.100.104.6:TCP:25"

# Management Server check
CHECK_MANAGEMENT="Yes"
MANAGEMENT_SERVERS="incojs01.scc911.com:10.100.78.143:TCP:443"
MANAGEMENT_SERVERS="${MANAGEMENT_SERVERS} lnmt1cuomtool11.scc911.com:10.100.128.149:TCP:443"
MANAGEMENT_SERVERS="${MANAGEMENT_SERVERS} miam1cuomtool11.scc911.com:192.168.208.86:TCP:443"
MANAGEMENT_SERVERS="${MANAGEMENT_SERVERS} inventory.scc911.com:10.100.128.201:TCP:443"

# Artifactory Server check
# OMA00 artifactory server; for documentation purposes
#ARTIFACTORY_SERVERS="${ARTIFACTORY_SERVERS} artifacts.sandbox.west.com:10.27.122.91:TCP:443"
# unknown target from the original diagram
#ARTIFACTORY_SERVERS="${ARTIFACTORY_SERVERS} led01564.west.com:10.85.116.84:TCP:443,6555"
CHECK_ARTIFACTORY="Yes"
ARTIFACTORY_SERVERS="docker-beta.wss.com:35.197.115.174:TCP:443"
ARTIFACTORY_SERVERS="${ARTIFACTORY_SERVERS} led35681.west.com:10.65.149.73:TCP:443,6555"
ARTIFACTORY_SERVERS="${ARTIFACTORY_SERVERS} artifacts.swn01.west.com:10.65.129.60:TCP:443,6555"
ARTIFACTORY_SERVERS="${ARTIFACTORY_SERVERS} led35658.west.com:10.70.114.192:TCP:443,6555"
ARTIFACTORY_SERVERS="${ARTIFACTORY_SERVERS} artifacts.den06.west.com:10.71.104.58:TCP:443,6555"

# OpNet Server check
CHECK_OPNET="Yes"
OPNET_SERVERS="lnmt1euasneon10.scc911.com:10.32.10.1:TCP:443"
OPNET_SERVERS="${OPNET_SERVERS} lmh08-smp01.corp.intrado.pri:10.100.4.63:TCP:19090"
OPNET_SERVERS="${OPNET_SERVERS} lmh08-smp02.corp.intrado.pri:10.100.4.64:TCP:19090"

# Satellite Server check
CHECK_SATELLITE="Yes"
SATELLITE_SERVERS=""
SATELLITE_SERVERS="${SATELLITE_SERVERS} lnmt1cuomsat6.scc911.com:10.100.143.62:TCP:80,443,5646,5647,8140,9090"

# Security Server checks. Add location and network zone
CHECK_SECURITY="Yes"
SECURITY_SERVERS=""
SECURITY_SERVERS="${SECURITY_SERVERS} DEN03:E911:10.100.115.8 "
SECURITY_SERVERS="${SECURITY_SERVERS} DEN03:E911:10.109.220.151 "
SECURITY_SERVERS="${SECURITY_SERVERS} DEN03:E911:10.109.240.150 "
SECURITY_SERVERS="${SECURITY_SERVERS} DEN03:E911:10.109.238.47 "
SECURITY_SERVERS="${SECURITY_SERVERS} DEN03:LAB:10.100.33.11 "
SECURITY_SERVERS="${SECURITY_SERVERS} DEN03:LAB:10.108.11.106 "
SECURITY_SERVERS="${SECURITY_SERVERS} DEN03:LAB:10.100.46.11 "
SECURITY_SERVERS="${SECURITY_SERVERS} DEN03:LAB:10.100.44.11 "
SECURITY_SERVERS="${SECURITY_SERVERS} DEN03:DMZ:10.100.115.8 "
SECURITY_SERVERS="${SECURITY_SERVERS} MIA04:E911:10.100.115.8 "
SECURITY_SERVERS="${SECURITY_SERVERS} MIA04:E911:10.109.220.151 "
SECURITY_SERVERS="${SECURITY_SERVERS} MIA04:E911:10.109.240.150 "
SECURITY_SERVERS="${SECURITY_SERVERS} MIA04:E911:10.109.238.47 "
SECURITY_SERVERS="${SECURITY_SERVERS} MIA04:DMZ:10.100.115.8 "
SECURITY_SERVERS="${SECURITY_SERVERS} MIA04:DMZ:192.168.210.99 "

# VPN Routes
CHECK_VPN="Yes"
VPN_ROUTES=""
VPN_ROUTES="${VPN_ROUTES} 10.104.64.0"

# Netbackup Server check
CHECK_NETBACKUP="Yes"
# Initialize variables
NBSERVERS=""
BUSERVERS=""
BUEXTRAS=""
BUIPLIST=""

# get the server settings
LOCATION=`grep "^${HOSTNAME}:Location:" ${SCRIPTS}/etc/chkserver.input | cut -f3 -d:`
NETZONE=`grep "^${HOSTNAME}:NetworkZone:" ${SCRIPTS}/etc/chkserver.input | cut -f3 -d:`

case ${LOCATION} in
  "DEN03" ) NBSERVERS="10.100.6.25"
            BUSERVERS="inveri01-gig0 10.100.6.25 incobu01 10.100.77.77 incobu02 10.100.5.89"
            BUEXTRAS="incobu03 10.100.128.141 lmntcoecmma10 10.109.30.22"
            BUIPLIST="10.100.6.25 10.100.77.77 10.100.5.89 10.100.128.141 10.109.30.22"
            ;;
  "MIA04" ) NBSERVERS="10.32.138.14"
            BUSERVERS="inveri02 10.32.138.14"
            BUIPLIST=${NBSERVERS}
            ;;
  "CAL02" | "TOR11" ) NBSERVERS="10.109.193.27"
                      BUSERVERS="calgbuma01 10.109.193.27 cgv08-bu01 10.109.193.56"
                      BUIPLIST="10.109.193.27 10.109.193.56"
                      ;;
  "HNL01" ) NBSERVERS="10.109.79.19"
            BUSERVERS="hnllhiecnbu11 10.109.79.19"
            BUIPLIST=${NBSERVERS}
            ;;
  "BHM02" ) case ${NETZONE} in
               "E911" ) NBSERVERS="10.80.131.100"
                        BUSERVERS="brhm2aabue911p01 10.80.131.100"
                        BUIPLIST=${NBSERVERS}
                        ;;
               "DMZ" ) NBSERVERS="10.81.131.100"
                       BUSERVERS="brhm2aabudmzp01 10.81.131.100"
                       BUIPLIST=${NBSERVERS}
                       ;;
             esac
             ;;
  "CLT01" ) case ${NETZONE} in
              "E911" ) NBSERVERS="10.80.163.100"
                       BUSERVERS="chrl2aabue911p01 10.80.163.100"
                       BUIPLIST=${NBSERVERS}
                       ;;
              "DMZ" ) NBSERVERS="10.81.163.100"
                      BUSERVERS="chrl2aabudmzp01 10.81.163.100"
                      BUIPLIST=${NBSERVERS}
                      ;;
            esac
            ;;
  "DFW10" ) case ${NETZONE} in
              "E911" ) NBSERVERS="10.80.67.100"
                       BUSERVERS="dlls2aabue911p01 10.80.67.100"
                       BUIPLIST=${NBSERVERS}
                       ;;
              "DMZ" ) NBSERVERS="10.81.67.100"
                      BUSERVERS="dlls2aabudmzp01 10.81.67.100"
                      BUIPLIST=${NBSERVERS}
                      ;;
            esac
            ;;
  "OAK02" ) case ${NETZONE} in
              "E911" ) NBSERVERS="10.80.35.100"
                       BUSERVERS="frfd2aabue911p01 10.80.35.100"
                       BUIPLIST=${NBSERVERS}
                       ;;
              "DMZ" ) NBSERVERS="10.81.35.100"
                      BUSERVERS="frfd2aabudmzp01 10.81.35.100"
                      BUIPLIST=${NBSERVERS}
                      ;;
            esac
            ;;
  "DTW01" ) case ${NETZONE} in
              "E911" ) NBSERVERS="10.80.99.100"
                       BUSERVERS="sfld2aabue911p01 10.80.99.100"
                       BUIPLIST=${NBSERVERS}
                       ;;
              "DMZ" ) NBSERVERS="10.81.99.100"
                      BUSERVERS="sfld2aabudmzp01 10.81.99.100"
                      BUIPLIST=${NBSERVERS}
                      ;;
            esac
            ;;
  "SAN01" ) case ${NETZONE} in
              "E911" ) NBSERVERS="10.80.3.100"
                       BUSERVERS="sndg2aabue911p01 10.80.3.100"
                       BUIPLIST=${NBSERVERS}
                       ;;
              "DMZ" ) NBSERVERS="10.81.3.100"
                      BUSERVERS="sndg2aabudmzp01 10.81.3.100"
                      BUIPLIST=${NBSERVERS}
                      ;;
            esac
            ;;
esac

