#!/bin/ksh

# Manage accounts that have been retired; essentially locked accounts
# Carl Schelin
# 2012-09-17
INTRADO=/opt/intrado

# if no such file, simply exit
if [[ ! -f $INTRADO/etc/retired.dat ]]
then
  exit 1
fi

# if no users in the data file, exit
OUTPUT=`grep -v "^#" $INTRADO/etc/retired.dat`
if [[ -z $OUTPUT ]]
then
  exit 1
fi

OS=`uname`
DATE=`date +"%Y%m$d"`

for i in `grep -v "^#" $INTRADO/etc/retired.dat`
do
  NAME=`echo $i | cut -f1 -d:`
  DELDATE=`echo $i | cut -f2 -d:`

# if today's the day, delete the old data.
  if [[ $DATE = $DELDATE ]]
  then

# delete the .ssh directory under the person's home directory
    HOMEDIR=`grep "^${NAME}:" /etc/passwd | cut -f6 -d:`
    if [[ ! -z $HOMEDIR ]]
    then
      if [[ -d $HOMEDIR/.ssh ]]
      then
        rm -rf $HOMEDIR/.ssh
      fi
    fi

# delete the home directory and cronjob data
    if [[ $OS = "SunOS" ]]
    then
      RETIRED=/export/home/retired
    fi

    if [[ $OS = "Linux" ]]
    then
      RETIRED=/home/retired
    fi

    if [[ $OS = "HP-UX" ]]
    then
      RETIRED=/home/retired
    fi

    if [[ $OS = "FreeBSD" ]]
    then
      RETIRED=/home/retired
    fi

    if [[ $OS = "OSF1" ]]
    then
      RETIRED=/usr/users/retired
    fi

# delete the home data but only after we make sure we're not deleting '/' by accident
    if [[ ! -z $RETIRED && ! -z $NAME ]]
    then
      if [[ -d $RETIRED/$NAME ]]
      then
        rm -rf $RETIRED/$NAME
      fi
      if [[ -f $RETIRED/cron/$NAME ]]
      then
        rm -rf $RETIRED/cron/$NAME
      fi
    fi

  fi
done

exit 0

