#!/bin/ksh

# chkarray by Carl Schelin
# Documentation: https://incowk01/makers/index.php?title=Chkarray
# Capture the configuration of the external array on Tru64 systems (mainly lldb01)
# documentation: https://incowk01/wiki/index.php/Sysadmin_Tools
# update script to loop through servers so a special script doesn't have to be written for each server

BASENAME=$(basename "${0}")
DIRNAME=$(dirname "${0}")

if [[ ! -f ${DIRNAME}/../.config ]]
then
  echo "Unable to locate ${DIRNAME}/../.config. Exiting."
  exit 1
fi

# Source the configuration file
. "${DIRNAME}"/../.config

CONTENT="${BASENAME}"
TIMEOUT=40
# Set this to one of the servers in the Tru64 cluster. It keeps it from running more than once and causing an error. The other side will just exit.
OSF1SVRS="bart crdb0 crdb1 homer ips0 ips1 lldb01 lmpc0a"

if [[ -z $1 ]]
then
  DEBUG='no'
  LOG=${SCRIPTS}/etc/${BASENAME}.output
else
  if [[ $1 = "help" ]]
  then
    echo "Usage:"
    echo ""
    echo "chkarray [debug]"
    echo "where:"
    echo " debug - tells the script to generate the logs necessary for troubleshooting"
    echo ""
    echo "The following command gives you access to the SAN:"
    FLAGS=$(/sbin/hwmgr -show scsi | /sbin/grep scp | /usr/bin/cut -f2 -d\[ | /usr/bin/cut -f1 -d\] | /usr/bin/awk -F/ '{print "-b"$1" -t"$2" -l"$3}')
    echo "/usr/lbin/hsxterm5 $FLAGS"
    exit 0
  else
    DEBUG='yes'
    LOG=${SCRIPTS}/etc/${BASENAME}.debug
  fi
fi  

# the OSF1SVRS variable should be run on all OSF servers except the second node of a cluster.
for i in ${OSF1SVRS}
do
  if [[ ${i} = "${HOSTNAME}" ]]
  then

    FLAGS=$(/sbin/hwmgr -show scsi | /sbin/grep scp | /usr/bin/cut -f2 -d\[ | /usr/bin/cut -f1 -d\] | /usr/bin/awk -F/ '{print "-b"$1" -t"$2" -l"$3}')

# Delete the old output file. This lets us know if there's a problem 
# with the tool completing

    if [[ -f ${SCRIPTS}/etc/${CONTENT}.output ]]
    then
      rm "${SCRIPTS}/etc/${CONTENT}.output"
    fi

    if [[ -z ${FLAGS} ]]
    then
      echo "No raid devices" >> "${LOG}"
      exit 0
    fi

    if [[ ${DEBUG} = 'no' ]]
    then
      /usr/lbin/hsxterm5 "${FLAGS}" >> "${LOG}" 2>&1 << EOF
show disk
quit
EOF
    else
# support asks for the following commands but the '!' portions fail, likely due to not having remote or assoc configurations.
# I removed the ! portion of both commands but here is what they ask for:
# show remote full !for DRM configuration
# show assoc full !for DRM configuration
      /usr/lbin/hsxterm5 "${FLAGS}" >> "${LOG}" 2>&1 << DEBUGEOF
show this full
show other full
show connection full
show unit full
show storage full
show disk full
debug va show_config_all
show remote full
show assoc full
quit
DEBUGEOF
    fi
    PID=$!

    while [[ ${TIMEOUT} -gt 0 ]]
    do
      /usr/bin/ps -p "${PID}" > /dev/null 2>&1
      if [[ $? -ne 0 ]]
      then
        break
      fi
      TIMEOUT=$(( TIMEOUT - 1 ))
      sleep 1
    done

# if the timeout reaches 0, then the process was killed.

    if [[ ${TIMEOUT} -le 0 ]]
    then
      kill -KILL "${PID}"
      echo "ERROR: ${CONTENT} process killed" >> "${LOG}"
    fi
  fi
done

exit 0

