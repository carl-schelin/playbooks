#!/bin/ksh

# chkroutetable by Carl Schelin
# Check the route configuration file to make sure it's valid.
# Check the existing routes against the route configuration file.

# need to add checks when using keywords vs individual lines in the route file

#BASENAME=$(basename "$0")
DIRNAME=$(dirname "$0")

if [[ ! -f ${DIRNAME}/../.config ]]
then
  echo "Unable to locate ${DIRNAME}/../.config. Exiting."
  exit 1
fi

# Source the configuration file
. "${DIRNAME}"/../.config

#PROGNAME="chkroutetable"
CONTENT="routetable"
LOG=${SCRIPTS}/etc/${CONTENT}.output

if [[ -f ${LOG} ]]
then
  rm "${LOG}"
fi

# Check routes on a Linux box
if [[ ${OS} = "Linux" ]]
then
  touch "${LOG}"
  DEFAULTGATEWAY=$(grep -i gateway /etc/sysconfig/network | cut -f2 -d= | sed -e "s/\"//g")
  DEFAULTDEVICE=$(netstat -rn | grep "^0.0.0.0.*10.109.242.254" | awk '{print $NF}')
  IP=''
  if [[ -f /usr/sbin/ip ]]
  then
    IP=/usr/sbin/ip
  fi
  if [[ -f /sbin/ip ]]
  then
    IP=/sbin/ip
  fi
  if [[ -f /bin/ip ]]
  then
    IP=/bin/ip
  fi
  if [[ ! -z $IP ]]
  then
    for i in $(${IP} addr | egrep -v "(^ |lo:)" | awk '{print $2}' | sed -e "s/://g")
    do
      if [[ -f /etc/sysconfig/network-scripts/route-${i} ]]
      then
        for j in $(egrep -v "^(#|$)" /etc/sysconfig/network-scripts/route-"${i}" | awk '{print $1":"$2":"$3":"$4":"$5}')
        do
          CHKADDR='yes'
# check for '=' implying alternate network route configuration then build a line to be then parsed as if it was a single line
          echo "${j}" | grep '=' > /dev/null
          if [[ $? -eq 0 ]]
          then
# give me the increment number; 0 - x
            INCREMENT=$(echo "${j}" | cut -f1 -d= | sed -e "s/ADDRESS//g")
# get the actual line name; add the '=' to make sure we don't match on 10 _and_ 100
            CHKADDR="$(echo "${j}" | cut -f1 -d=)="
# get the actual address; due to the line, it'll have a bunch of ':' following the line
#            ALTRADDR=$(echo "${j}" | cut -f2 -d= | cut -f1 -d:)
# search for and get the matching netmask.
#            ALTRMASK=$(grep "NETMASK${INCREMENT}=" /etc/sysconfig/network-scripts/route-"${i}" | cut -f2 -d=)
# search for and get the matching gateway.
            ALTRGATE=$(grep "GATEWAY${INCREMENT}=" /etc/sysconfig/network-scripts/route-"${i}" | cut -f2 -d=)

# build a replacement line
            j="$ADDRESS/0:via:$ALTRGATE:dev:$i"

# tell the rest to process the line
            if [[ $CHKADDR = "ADDRESS${INCREMENT}=" ]]
            then
              CHKADDR='yes'
            else
              CHKADDR='no'
            fi
          fi

          if [[ $CHKADDR = 'yes' ]]
          then
            ADDR=$(   echo "${j}" | cut -f1 -d:)
            VIA=$(    echo "${j}" | cut -f2 -d:)
            GATEWAY=$(echo "${j}" | cut -f3 -d:)
            DEV=$(    echo "${j}" | cut -f4 -d:)
            DEVICE=$( echo "${j}" | cut -f5 -d:)

# check ip address and mask
# check via keyword
            if [[ ${VIA} != 'via' ]]
            then
              echo "${ADDR} line 'via' is incorrect: ${VIA}" >> "${LOG}"
            fi
# check gateway
# check dev keyword; if blank then dev is default to the file name interface name
            if [[ -z ${DEV} ]]
            then
              DEVICE=${i}
            else
              if [[ ${DEV} != 'dev' ]]
              then
                echo "${ADDR} line 'dev' is incorrect: ${DEV}" >> "${LOG}"
              fi
            fi
# check unnecessary routes
# if the route is in the default route interface, it's probably needed.
# if the default route entry has been set (/etc/sysconfig/network)
# and if the gateway in the file has been set (should have been) /etc/sysconfig/network-scripts/ifcfg-interface
# and the default gateway is the same as the gateway in the file
# and the device is not the same as the default device
            if [[ ! -z ${DEFAULTGATEWAY} ]] && [[ ! -z ${GATEWAY} ]] && [[ ${DEFAULTGATEWAY} = "${GATEWAY}" ]] && [[ ! ${DEVICE} = "${DEFAULTDEVICE}" ]]
            then
              echo "${ADDR} uses ${DEFAULTGATEWAY} as its gateway and ${GATEWAY} is the default gateway so the route probably isn't needed" >> "${LOG}"
            fi
          fi
        done

# now check existing routes against the file
        for j in $(netstat -rn | grep "${i}" | awk '{print $1":"$2}' | egrep -v "(^|:)0.0.0.0(:|$)")
        do
          ADDR=$(   echo "${j}" | cut -f1 -d:)
          GATEWAY=$(echo "${j}" | cut -f2 -d:)

          OUTPUT=$(grep "${ADDR}" /etc/sysconfig/network-scripts/route-"${i}" | grep "${GATEWAY}")
          if [[ -z ${OUTPUT} ]]
          then
# check for the ADDRESS0=address and GATEWAY0=address lines if the via line above doesn't work
            egrep "ADDRESS.*=${ADDR}" /etc/sysconfig/network-scripts/route-"${i}" > /dev/null
            if [[ $? -eq 0 ]]
            then
              INCREMENT=$(egrep "ADDRESS.*=${ADDR}" /etc/sysconfig/network-scripts/route-"${i}" | cut -f1 -d= | sed -e "s/ADDRESS//g")
              egrep "GATEWAY${INCREMENT}=${GATEWAY}" /etc/sysconfig/network-scripts/route-"${i}" > /dev/null
              if [[ $? -gt 0 ]]
              then
                echo "Gateway missing from /etc/sysconfig/network-scripts/route-${i}: ADDRESS${INCREMENT}=${ADDR}  GATEWAY${INCREMENT}=${GATEWAY}" >> "${LOG}"
              fi
            else
              echo "Route missing from /etc/sysconfig/network-scripts/route-${i}: ${ADDR}  ${GATEWAY}" >> "${LOG}"
            fi
          fi
        done
      fi
    done
  fi
fi

exit 0

