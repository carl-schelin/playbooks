#!/bin/bash

# querycarl
# 2013-10-17 - Search for a log entry and report it if it hasn't been found
# 2013-10-18 - Modified the data to use perl one liners instead as the script 
#              has moved to a Sun system.
#              replaced TIME=`/bin/date --date "${i} minutes ago" +"%b %e %H:%M:"`
#              with the perl "one liner"
# 2013-10-23 - Updated OUTPUT variable to NOT include lines in the log with 
#              PROG name "querycarl" which would be false positives
# 2014-01-31 - CS: Modify the error message to show 15 minutes vs 5 minutes.
# 2014-01-31 - CS: Modified the time check from localtime (MST) to gmtime (GMT)
# 2015-01-21 - CS: Moved to the CARL server. Path change to egrep (/bin vs /usr/bin on sun)
#

##[ WARNING! ] #######[ WARNING! ] #####[ WARNING! ] ######[ WARNING! ] ##
#
# #####  This script is maintained on the Unix Team's Jumpstart Server.
# #####  Do NOT make changes to this script as it'll be overwritten 
# #####  each night. Contact the Unix Team if changes need to be made.
#
####################### YOU HAVE BEEN WARNED!!! #######################
#
##[ WARNING! ] #######[ WARNING! ] #####[ WARNING! ] ######[ WARNING! ] ##


# This script may be moved to a Linux environment. Use the following 
# block as a guideline to how to convert the script.
#
# ### cron differences
# Linux:
# /5 * * * * /usr/local/bin/querycarl > /dev/null 2>&1
# Solaris:
# 0,5,10,15,20,25,30,35,40,45,50,55 * * * * /usr/local/bin/querycarl > /dev/null 2>&1
# 0,6,12,18,24,30,36,42,48,54 * * * * /usr/local/bin/querycarl > /dev/null 2>&1
# 0,15,30,45 * * * * /usr/local/bin/querycarl > /dev/null 2>&1
# 2,17,32,47 * * * * /usr/local/bin/querycarl > /dev/null 2>&1
#
# NOTE: CARL server (lnmtcodccl20) is UTC, incoov01 is MST/MDT so is 7/6 hours 
# ahead of incoov01.
# Using gmtime function vs localtime function to get the correct time.
#

HOSTNAME=`hostname|cut -f1 -d.`
PROG=querycarl
QUERY="CARL_sequence"
ERROR="${QUERY} ERROR: Log entry not found in the past 15 minutes"
LOG=/var/log/messages
FLAG=no
DEBUG=no

# check for the past 15 minutes.
# Add or delete values if the time period changes, leave one extra one for overlap
for i in 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1 0
do
  export SECONDS=$(( ${i} * 60 ))
  TIME=`/usr/bin/perl -e '
    @T=gmtime(time-$ENV{SECONDS});
    @M=('Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec');
    printf("%s %2d %02d:%02d:",$M[$T[4]],$T[3], $T[2], $T[1])
  '`
  OUTPUT=`/bin/egrep "^${TIME}".*${QUERY} ${LOG} | grep -v ${PROG}`
  if [[ $DEBUG = 'yes' ]]
  then
    echo $OUTPUT
  fi

  if [[ ! -z ${OUTPUT} ]]
  then
    FLAG=yes
  fi
done

# report it if there wasn't a hit in the log file for the past x minutes
if [[ ${FLAG} = "no" && ${DEBUG} = "no" ]]
then
  /usr/bin/logger -p err -t ${PROG} "${ERROR}"
fi

