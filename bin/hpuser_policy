#!/usr/bin/perl
#===========================================================
# PURPOSE:  Report getprpw output for functional users
#  AUTHOR:  JSchroeter
#    DATE:  12/10/2015
#  
#    NOTE:  Report on getprpw output
#
#===========================================================
my $VERSION = 1.2;
my $BASENAME = `basename $0 .pl`;
chop($BASENAME);
my $DIR = "/opt/intrado";
my $LOGFILE  = "$DIR/log/${BASENAME}.log";
my $DATADIR  = "$DIR/etc";

# Users to report on 
#our @USERS = qw "informix sys root jschroet mchahud";

# Functional users
our @FUSERS = qw "lcuser root daemon bin sys adm uucp lp nuucp hpdb nobody www cimsrvr sfmdb tftp sshd iwww owww hpsmh unixsvc hpsim alimadm dms e911 aliadmin alisuper alioper ali ala apec alidba informix mysql smbnull opc_op vz55 nessus ftp informix apec ALI-M ali-m mysqlien media hp_sca isg snr bind trtest sims sip ab rg uddi aaeis elx dms isocuser notes mysqlmed ienvadm iendadm prgn sams elxadmin";

#===========================================================
# Function LOG() - Log messages to $LOGFILE
#===========================================================
sub LOG() {
	my $DATE = `date +%x-%T`;
	chop($DATE);
	my @MSG = @_;
	open(LOG,">>$LOGFILE") || die "Cannot open $LOGFILE\n";	
	print LOG "$DATE - @MSG\n";
	close(LOG);
}

#===========================================================
# Function REPORT() - Report getprpw for users
#===========================================================
sub REPORT() {

	&LOG("Running REPORT procedure");

	# Open 2 reports, funcation users and regular users
	my $DATE=`date +%Y%m%d-%H%M%S`;
	# Remove date for Daily Intrado script, do not want multiple copies
	#open(FUSERS,">$DATADIR/functional_hp_users.$DATE") or die "Could not open funcational_users: $!\n";
	open(FUSERS,">$DATADIR/functional_hp_users") or die "Could not open funcational_users: $!\n";
	# Remove date for Daily Intrado script, do not want multiple copies
	#open(RUSERS,">$DATADIR/regular_hp_users.$DATE") or die "Could not open funcational_users: $!\n";
	open(RUSERS,">$DATADIR/regular_hp_users") or die "Could not open funcational_users: $!\n";

	# Get Complete User list 
	while (($user) = getpwent()) {
		push @USERS, $user;
	}

	# Sort the list and report on each user
	foreach $user (sort @USERS) {

		$GETPRPW = `/usr/lbin/getprpw $user`;
		@PRPW = split(/,/,$GETPRPW);

		# EXPTM
		($EXPTM,$exptm) = split(/=/,$PRPW[6]);

		# LFTM
		($LFTM,$lftm) = split(/=/,$PRPW[7]);

		# LFTM
		($SPWCHG,$spwchg) = split(/=/,$PRPW[8]);

		# EXPWARN
		($EXPWARN,$expwarn) = split(/=/,$PRPW[12]);

		# Incorrect Logins
		($CULOGIN,$culogin) = split(/=/,$PRPW[24]);

		# nullPW
		($NULLPW,$nullpw) = split(/=/,$PRPW[16]);

		# umaxlntr
		($UMAXLNTR,$umaxlntr) = split(/=/,$PRPW[26]);

		# alock
		($ALOCK,$alock) = split(/=/,$PRPW[27]);

		# Account Status 
		($LOCKOUT,$lockout) = split(/=/,$PRPW[28]);
					

		if (grep {$_ eq $user} @FUSERS) {
			write FUSERS; 
		}else{
			write RUSERS;
		}
	}

	close(FUSERS);
	close(RUSERS);

	&LOG("Finished running REPORT procedure");
}

#===========================================================
# Main Starts Here
#===========================================================
if ( -f "$LOGFILE" ) {      
	unlink($LOGFILE);
}
&LOG("Starting ${BASENAME}.pl");

# Test to make sure unixsvc sudoers setup
# Changed to root, permission check probably not needed.
`/usr/lbin/getprpw -m uid unixsvc > /dev/null 2>&1`;
$RC=$?;
if ( $RC eq 0 ) {
	&REPORT;
} else {
	&LOG("No permission to run /usr/lbin/getprpw\n");
}
&LOG("Completed ${BASENAME}.pl");

#-------------------------------------------
# Report FORMATS
#-------------------------------------------
format RUSERS =
@<<<<<<<<<<<  @>>>>   @>>>>     @>>>     @>>>   @>>>>     @>>>>    @>>>  @>>>>>>  @>>>>>>>>>>>>>>>>>>>>>>>
$user         $exptm  $lftm  $expwarn $culogin $nullpw  $umaxlntr  $alock $lockout $spwchg
.

format RUSERS_TOP =
User          exptm   lftm   expwarn  culogin  nullpw  umaxlntr  alock   lockout  spwchg
============  =====   =====  =======  =======  ======  ========  ======  =======  ========================
.

format FUSERS =
@<<<<<<<<<<<  @>>>>   @>>>>     @>>>     @>>>   @>>>>     @>>>>    @>>>  @>>>>>>  @>>>>>>>>>>>>>>>>>>>>>>>
$user         $exptm  $lftm  $expwarn $culogin $nullpw  $umaxlntr  $alock $lockout $spwchg
.

format FUSERS_TOP =
User          exptm   lftm   expwarn  culogin  nullpw  umaxlntr  alock   lockout  spwchg
============  =====   =====  =======  =======  ======  ========  ======  =======  ========================
.
