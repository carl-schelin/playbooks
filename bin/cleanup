#!/bin/ksh

#BASENAME=$(basename "${0}")
DIRNAME=$(dirname "${0}")

if [[ ! -f ${DIRNAME}/../.config ]]
then
  echo "Unable to locate ${DIRNAME}/../.config. Exiting."
  exit 1
fi

# Source the configuration file
. "${DIRNAME}"/../.config

# prevent the Netbackup Fiber Transport client from starting. Caused an incident where incofmc2 failed to completely start due to the nbfbclnt script halting on starting the agent.
if [[ -f /usr/openv/netbackup/bin/nbftclnt ]]
then
  chmod -x /usr/openv/netbackup/bin/nbftclnt
fi

if [[ -d /opt/ov ]]
then
  if [[ -f /opt/OV/bin/ovc ]]
  then
    echo "Removing /opt/ov"
    rm -rf /opt/ov
  fi
fi

if [[ -d /opt/nbu ]]
then
  if [[ -f /usr/openv/netbackup/bp.conf ]]
  then
    echo "Removing /opt/nbu"
    rm -rf /opt/nbu
  fi
fi

if [[ -f /tmp/newuser ]]
then
  rm /tmp/newuser
  rm /tmp/newuser.add
  rm /tmp/newuser.pw
  rm /tmp/newuser.users
fi

if [[ ! -f /usr/bin/ksh ]]
then
  if [[ -f /bin/ksh ]]
  then
    ln -s /bin/ksh /usr/bin/ksh
  fi
fi

# change ownership of unixsvc authorized_keys file
UNIXSVC=$(grep "^unixsvc:" /etc/passwd | cut -f6 -d:)
if [[ ! -z ${UNIXSVC} ]]
then
  chown unixsvc:unixsvc "${UNIXSVC}"/.ssh/*
  chmod 600 "${UNIXSVC}"/.ssh/*
  chmod 700 "${UNIXSVC}"/.ssh
fi

# remove log files older than 10 days
find ${SCRIPTS_LOGS} -name logfile.* -mtime +10 -exec rm {} \;

# and remove old log files than 90 days (3 files)
find ${SCRIPTS_LOGS} -name unixsuite.log.* -mtime +92 -exec rm {} \;


# until rsync is working as expected, old files may not be removed.
# this variable lets us identify files that have been deprecated 
# and aren't needed any more. Add a deprecated file here and 
# the file on the server will be removed if it exists

DEPRECATED="chkapa chkapa.output chkarray chkarray.output chkems chkems.output chkipcs chkipcs.output chkomsa chkomsa.out"
DEPRECATED="${DEPRECATED} chkprofile chkprofile.output chkpwck chkpwck.output chkroutetable chksecurity chksecurity.output"
DEPRECATED="${DEPRECATED} chksudo chksudo.output chksync chktime chktime.output getsysinfo leaping leaping.log leaping.run"
DEPRECATED="${DEPRECATED} ovhfchk ovupdate retired routetable.output runnow runonce runps setdate sync-clock chksudo.bak"
DEPRECATED="${DEPRECATED} chkconfig yodo ntpd.output oracle.output STDOUT nohup.out carl chkopenview.completed"
DEPRECATED="${DEPRECATED} lsof.output opcagt.status.output ovstatus.output Unix_Backups_Last_7Days.html group.master.backup"

if [[ ! -z ${DEPRECATED} ]]
then
  for i in ${DEPRECATED}
  do
    if [[ -f ${SCRIPTS_BINS}/$i ]]
    then
      rm ${SCRIPTS_BINS}/$i
    fi
    if [[ -f ${SCRIPTS_DATA}/$i ]]
    then
      rm ${SCRIPTS_DATA}/$i
    fi
    if [[ -f ${SCRIPTS_LOGS}/$i ]]
    then
      rm ${SCRIPTS_LOGS}/$i
    fi
  done
fi

# standardizing rsync to /usr/local/bin/rsync so the unixsuite scripts can be rsync'd instead of just copied.
if [[ ! -f /usr/local/bin/rsync ]]
then
  if [[ -f /usr/bin/rsync ]]
  then
    ln /usr/bin/rsync /usr/local/bin/rsync
  fi
fi

# clean up old crash dump files
if [[ -f /var/crash ]]
then
  find /var/crash -atime +32 -exec rm -f {} \;

# delete any empty directories now
  cd /var/crash
  for i in `find . -maxdepth 1 -type d -empty`
  do
    rmdir $i
  done

fi

# install the /usr/local/bin scripts as required.
# this depends on which server we're on
# this is for incojs01, lnmt1cuomtool11, miam1cuomtool11, lnmt1cuasifgit, and lnmt1cuomrcs1

if [[ ${HOSTNAME} = 'incojs01.scc911.com' ]]
then
  cp ${SCRIPTS_INSTALL}/scripts/inventory /usr/local/bin/
  cp ${SCRIPTS_INSTALL}/scripts/newserver /usr/local/bin/
fi
if [[ ${HOSTNAME} = 'lnmt1cuomtool10.scc911.com' ]] || [[ ${HOSTNAME} = 'miam1cuomtool10.scc911.com' ]]
then
  for i in inventory newserver import context searchansible
  do
    cp ${SCRIPTS_INSTALL}/scripts/$i /usr/local/bin/
  done
fi
if [[ ${HOSTNAME} = 'lnmt1cuasifgit.scc911.com' ]]
then
  cp ${SCRIPTS_INSTALL}/scripts/context /usr/local/bin/
fi
if [[ ${HOSTNAME} = 'lnmtcuomrcs1.scc911.com' ]]
then
  for i in check checkall checkdiff checkin checkinstall checkout checkrw install playbooks
  do
    cp ${SCRIPTS_INSTALL}/scripts/$i /usr/local/bin/
  done
fi

