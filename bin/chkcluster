#!/bin/ksh

# chkcluster - Capture the configuration of the cluster    
# Owner: Paul Pietras 
# Template borrowed from Carl's chk scripts
# 20120831 - Initial draft of script

#BASENAME=$(basename "${0}")
DIRNAME=$(dirname "${0}")

if [[ ! -f ${DIRNAME}/../.config ]]
then
  echo "Unable to locate ${DIRNAME}/../.config. Exiting."
  exit 1
fi

# Source the configuration file
. "${DIRNAME}"/../.config

PROGNAME="chkcluster"
REL=""

if [[ $OS = "SunOS" ]]
then
  if [[ -f /etc/release ]]
  then
    REL=`head -1 /etc/release | awk '{print $3}'`
  else 
    REL="1/02"
  fi
fi

# Tools for capturing cluster data
#/usr/sbin/cmviewcl
#/usr/sbin/clustat 

for CONTENT in cmviewcl clustat
do
  TIMEOUT=40

# Flag options for future use in case we want more cluster detail
  FLAGS=""
  if [[ $CONTENT = "cmviewcl" ]]
  then
    FLAGS="-v"  # To capture verbose output 
  fi
  if [[ $CONTENT = "clustsat" ]]
  then
    FLAGS=""     # 
  fi

# Delete the old output file. This lets us know if there's a problem
# with the tool completing

  if [[ -f ${SCRIPTS_LOGS}/$CONTENT.output ]]
  then
    rm ${SCRIPTS_LOGS}/$CONTENT.output
  fi

# run the command to get the expected output

  if [[ -f /usr/sbin/$CONTENT ]]
  then
    #NOTE: the grep here is to remove the date line in clustat output.  Does not affect cmviewcl.
    /usr/sbin/$CONTENT $FLAGS | grep -v "Cluster Status for .*\@" > ${SCRIPTS_LOGS}/$CONTENT.output 2>&1 &
    PID=$!
  else
      echo "CLUSTER: $CONTENT binary is not installed" > ${SCRIPTS_LOGS}/$CONTENT.output
  fi

# wait for the specified number of seconds for the command to complete
# if the timeout is exceeded, kill the process and move on to the next command

  while [[ $TIMEOUT -gt 0 ]]
  do
    /usr/bin/ps -p $PID > /dev/null 2>&1
    if [[ $? -ne 0 ]]
    then
      break
    fi
    TIMEOUT=$(($TIMEOUT - 1))
    sleep 1
  done

# if the timeout reaches 0, then the process was killed.

  if [[ $TIMEOUT -le 0 ]]
  then
    kill -KILL $PID
  fi
done

exit 0

