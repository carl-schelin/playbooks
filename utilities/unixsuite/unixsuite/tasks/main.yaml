# run the following commands to set up a new system.
# maybe part of the install script too; the cfg2html file
# this also copies a few scripts for special servers.
---
- name: Set up the suitecheck script
  ansible.builtin.cron:
    name: "Master script which runs scripts that run daily or less often"
    minute: "*/5"
    job: "/opt/unixsuite/bin/suitecheck > /dev/null 2>&1"

- name: Set up the sendmail process
  ansible.builtin.cron:
    name: "Processes the sendmail queue every 15 minutes"
    minute: "*/15"
    job: "/usr/sbin/sendmail -q"

- name: Create the base directory
  ansible.builtin.file:
    path: '/opt/unixsuite'
    state: directory
    owner: unixsvc
    group: sysadmin
    mode: 0770

- name: Create the core directories
  ansible.builtin.file:
    path: '/opt/unixsuite/{{ item }}'
    state: directory
    owner: unixsvc
    group: sysadmin
    mode: 0770
  with_items:
    - bin
    - cfghtml
    - etc
    - run.d
    - var

- name: Create the run directories
  ansible.builtin.file:
    path: '/opt/unixsuite/run.d/{{ item }}'
    state: directory
    owner: unixsvc
    group: sysadmin
    mode: 0770
  with_items:
    - '0100'
    - 'always'

- name: Install the scripts
  ansible.builtin.copy:
    src: '../files/.config'
    dest: '/opt/unixsuite/.config'
    owner: unixsvc
    group: sysadmin
    mode: 0660

- name: Install the scripts
  ansible.builtin.copy:
    src: '../files/{{ item }}'
    dest: '/opt/unixsuite/bin/{{ item }}'
    owner: unixsvc
    group: sysadmin
    mode: 0770
  with_items:
    - chkcluster
    - chkdef
    - chketh
    - chkif
    - chkkubernetes
    - chkmessages
    - chkports
    - chkprinter
    - chkprtdiag
    - chkraid
    - chksan
    - chkserver
    - chkstack
    - chksudoers
    - chksys
    - chkusers
    - chkversion
    - chkyum
    - cleanup
    - corefiles
    - gethistory
    - lockuser
    - logme
    - logroll
    - makeroutes
    - mkimage-yum.sh
    - modifysudo
    - msgprocess
    - mysql.backup
    - nessus
    - password
    - pingcheck
    - profile
    - resethp
    - review
    - runmrc
    - simplejson
    - status
    - status.md
    - suitecheck
    - tomcat
    - ucmdbsvc
    - unixsuite
    - unlock
    - update.forward
    - update.gecos
    - update.groups
    - update.motd

- name: Link standard scripts
  ansible.builtin.file:
    src: '/opt/unixsuite/bin/{{ item.src }}'
    dest: '/opt/unixsuite/run.d/0100/{{ item.dest }}'
    state: hard
  with_items:
    - { src: chkserver,      dest: chkserver }
    - { src: chksys,         dest: chksys }
    - { src: chkusers,       dest: chkusers }
    - { src: chkversion,     dest: chkversion }
    - { src: cleanup,        dest: cleanup }
    - { src: lockuser,       dest: lockuser }
    - { src: modifysudo,     dest: modifysudo }
    - { src: update.forward, dest: update.forward }
    - { src: update.gecos,   dest: update.gecos }
    - { src: update.groups,  dest: update.groups }
    - { src: update.motd,    dest: update.motd }

#- name: Link standard scripts
#  ansible.builtin.file:
#    src: '/opt/unixsuite/bin/{{ item.src }}'
#    dest: '/opt/unixsuite/run.d/always/{{ item.dest }}'
#    state: hard
#  with_items:
#    - { src: pingcheck,      dest: pingcheck }

- name: Check .config status
  stat:
    path: /opt/unixsuite/run.d/.config
  register: configvar

- name: Link .config
  ansible.builtin.file:
    src: /opt/unixsuite/.config
    dest: /opt/unixsuite/run.d/.config
    state: hard
  when: configvar.stat.exists == false

